Customer Controller:
package com.restful.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.restful.demo.model.Customer;
import com.restful.demo.model.Employee;
import com.restful.demo.serviceinterface.CustomerService;

@RestController
@RequestMapping(value = "/customer")

public class CustomerController {
	@Autowired
	CustomerService customerService;

	
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	public void add(@RequestBody Customer customer) {
		customerService.addCustomer(customer);
	}

	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public Customer edit(@RequestParam String email, @RequestBody Customer cust) {
		customerService.updateCustomerData(cust);
		return cust;
	}
	
	@GetMapping(value = "/getDetails/{email}")
	public Customer getCustomerDetails(@PathVariable String email) {
		Customer customer = customerService.getCustomerData(email);
		return customer;
	}
	@GetMapping(value = "/list")
	private List<Customer> getAllCustomers() {
		return customerService.getAllCustomer();
	}

	
	@RequestMapping(value = "/delete", method = RequestMethod.POST)
	public Customer delete(@RequestParam String email, @RequestBody Customer cus) {
		customerService.deleteCustomer(cus);
		return cus;
	}
}



CustomerServiceImpl


package com.restful.demo.serviceimpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.restful.demo.model.Customer;
import com.restful.demo.model.Employee;
import com.restful.demo.repository.CustomerRepository;
import com.restful.demo.serviceinterface.CustomerService;

@Service
public class CustomerServiceImpl implements CustomerService {
	@Autowired
	private CustomerRepository customerRepository;

	@Override
	public void addCustomer(Customer customer) {
		// TODO Auto-generated method stub
		customerRepository.save(customer);

	}

	@Override
	public Customer updateCustomerData(Customer customer) {
		Customer custom = customerRepository.save(customer);
		return custom;
	}

	@Override
	public Customer getCustomerData(String email) {
		// TODO Auto-generated method stub
			Customer customer = customerRepository.FindByEmail(email);

		return customer;
	}

	@Override
	public List getAllCustomer() {
		List list = customerRepository.findAll();
		return list;
	}

	@Override
	
	public void deleteCustomer(Customer cus) {
		// TODO Auto-generated method stub
		customerRepository.delete(cus);

		
	}

}



RestfulWebDemoApplication

package com.restful.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class RestfulWebDemoApplication {

	public static void main(String[] args) {
		System.out.println("Welcome");
		SpringApplication.run(RestfulWebDemoApplication.class, args);
	}

}



ServletInitializer


package com.restful.demo;

import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;

public class ServletInitializer extends SpringBootServletInitializer {

	@Override
	protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
		return application.sources(RestfulWebDemoApplication.class);
	}

}






Customer.java
package com.restful.demo.model;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Customer {
	@Id
	// @GeneratedValue(strategy=GenerationType.IDENTITY)

	private long id;

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	private int mobNo;
	private String firstName;
	private String lastName;
	private String city;
	private String address1;
	private String address2;
	private String state;
	private int pincode;
	private String email;

	public int getMobNo() {
		return mobNo;
	}

	public void setMobNo(int mobNo) {
		this.mobNo = mobNo;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public String getAddress1() {
		return address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}

	public String getAddress2() {
		return address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}

	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}

	public int getPincode() {
		return pincode;
	}

	public void setPincode(int pincode) {
		this.pincode = pincode;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

}



Customer Repository
package com.restful.demo.repository;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.restful.demo.model.Customer;
import com.restful.demo.model.Employee;
@Repository
public interface CustomerRepository extends JpaRepository<Customer, Long> {
	@Query("select c from Customer c where c.email =:email")
	public Customer FindByEmail(@Param("email") String email);


}




pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.1</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.restful.demo</groupId>
	<artifactId>restful_web_demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>restful_web_demo</name>
	<description>Demo project for Spring Boot</description>

	<!-- <properties> <java.version>1.8</java.version> </properties> -->

	<!-- <properties> <java.version>11.0.9</java.version> </properties> -->
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
			<version>5.1.38</version> </dependency> -->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>





